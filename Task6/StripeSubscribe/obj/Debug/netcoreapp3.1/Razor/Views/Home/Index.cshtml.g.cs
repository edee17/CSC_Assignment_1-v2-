#pragma checksum "C:\Users\Husni Haron\source\repos\StripeSubscribe\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "94827ee13144b5c5bbadf4003ec1ea889891e2fb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Husni Haron\source\repos\StripeSubscribe\Views\_ViewImports.cshtml"
using StripeSubscribe;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Husni Haron\source\repos\StripeSubscribe\Views\_ViewImports.cshtml"
using StripeSubscribe.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Husni Haron\source\repos\StripeSubscribe\Views\Home\Index.cshtml"
using Microsoft.Extensions.Options;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"94827ee13144b5c5bbadf4003ec1ea889891e2fb", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a34b5427697fb213a785a8f2e60ffc17dbb28c25", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Payment", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Subscribe", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("payment-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:100%;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Upgrade", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("upgrade-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Husni Haron\source\repos\StripeSubscribe\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"header\">\r\n        <h2>Customer Subscription</h2>\r\n        <button id=\"addLink\" name=\"addLink\" data-toggle=\"modal\" data-target=\"#addModal\"");
            BeginWriteAttribute("value", " value=\"", 295, "\"", 303, 0);
            EndWriteAttribute();
            WriteLiteral(">Add Customer</button>\r\n</div>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div id=\"customerInfoGather\" class=\"col-md-3\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "94827ee13144b5c5bbadf4003ec1ea889891e2fb6321", async() => {
                WriteLiteral("\r\n                <label>Email</label>\r\n                <input type=\"text\" width=\"300\" id=\"email\" class=\"form-control\" name=\"inEmail\"");
                BeginWriteAttribute("value", " value=\"", 591, "\"", 599, 0);
                EndWriteAttribute();
                WriteLiteral(" placeholder=\"Email\" />\r\n                <input type=\"button\" id=\"submitBtn\" value=\"Submit\" class=\"btn btn-primary\" />\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
    </div>
</div>

<table id=""subscriptionTable"" class=""border-dark"">
    <thead>
        <tr>
            <td id=""columnHead"">
                No.
            </td>
            <td id=""columnHead"">
                Name
            </td>
            <td>

            </td>
            <td id=""columnHead"">
                Plan Id
            </td>
            <td>

            </td>
        </tr>
    </thead>
    <tbody id=""subscriptionBody"">
    </tbody>
</table>
<div class=""modal fade"" id=""addModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"" style=""border:unset;"">
            <div class=""modal-header"" id=""modalHeader"">
                <h4 class=""modal-title"" id=""addModalLabel"">Add Customer</h4>
            </div>
            <div class=""modal-body"" id=""modalBody"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "94827ee13144b5c5bbadf4003ec1ea889891e2fb8978", async() => {
                WriteLiteral(@"
                    <div class=""container"">
                        <div class=""form-row"">
                            <label for=""card-element"">
                                Credit or debit card
                            </label>
                            <div id=""card-element"" style=""width:100%;"">
                                <!-- A Stripe Element will be inserted here. -->
                            </div>

                            <!-- Used to display form errors. -->
                            <div id=""card-errors"" role=""alert""></div>
                        </div>
                        <div class=""form-row"">
                            <label for=""email"">
                                Email
                            </label>
                            <div style=""width:100%;"">
                                <input name=""cardEmail"" id=""cardEmail"" />
                            </div>
                        </div>
                        <div class=""form-row"">");
                WriteLiteral(@"
                            <label for=""plan"">
                                Plan
                            </label>
                            <div style=""width:100%;"">
                                <input type=""radio"" name=""plan"" id=""planMonthly"" value=""Daily5"" /><label for=""planMonthly"">Monthly</label><br />
                                <input type=""radio"" name=""plan"" id=""planYearly"" value=""Daily10"" /><label for=""planYearly"">Yearly</label>
                            </div>
                        </div>
                        <button>Make Subscription</button>
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""updateModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""updateModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"" style=""border:unset;"">
            <div class=""modal-header"" id=""modalHeader"">
                <h4 class=""modal-title"" id=""updateModalLabel"">Update Subscription</h4>
            </div>
            <div class=""modal-body"" id=""modalBody"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "94827ee13144b5c5bbadf4003ec1ea889891e2fb13258", async() => {
                WriteLiteral("\r\n                    <div class=\"container\">\r\n                        <input type=\"hidden\" name=\"subKey\" id=\"subKey\"");
                BeginWriteAttribute("value", " value=\"", 4188, "\"", 4196, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                        <div class=""form-row"">
                            <label for=""plan"">
                                Plan
                            </label>
                            <div style=""width:100%;"">
                                <input type=""radio"" name=""plan"" id=""planMonthly"" value=""Daily5"" /><label for=""planMonthly"">Monthly</label><br />
                                <input type=""radio"" name=""plan"" id=""planYearly"" value=""Daily10"" /><label for=""planYearly"">Yearly</label>
                            </div>
                        </div>
                        <button id=""updateBtn"">Update Subscription</button>
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <style>\r\n        #columnHead {\r\n            width: 100px;\r\n        }\r\n    </style>\r\n\r\n    <script>\r\n        // Create a Stripe client and use the Viewbag to get your Stripe API key.\r\n        var stripe = Stripe(\'");
#nullable restore
#line 126 "C:\Users\Husni Haron\source\repos\StripeSubscribe\Views\Home\Index.cshtml"
                        Write(Stripe.Value.PublishableKey);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
        base: {
            color: '#32325d',
            fontFamily: '""Helvetica Neue"", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
            color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', {style: style});

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function(ev");
                WriteLiteral(@"ent) {
        var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
        event.preventDefault();

            stripe.createToken(card).then(function(result) {
                if (result.error) {
                // Inform the user if there was an error.
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
                } else {
                // Send the token to your server.
                stripeTokenHandler(result.token);
                }
            });
        });

        // Submit the form with the token ID.
        function stripeTokenHandle");
                WriteLiteral(@"r(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }

        $(function () {
            $('#submitBtn').on('click', function () {
                var email = $('#email').val();
                LoadCustomerID(email);
            })
        })
        $(function () {
            $('#subscriptionBody').on('click', '#editLink', function () {
                var id = $(this).val();
                $('#subKey').val($(this).val());
            });
        })
        $(function () {
            $('#updateModal').on('click', '#updateBtn', funct");
                WriteLiteral(@"ion () {
                setTimeout(function () {
                    location.reload();
                }, 2000);
            });
        })


        function LoadCustomerID(inEmail) {
                function EmailCollector(intoEmail) {
                    this.email = intoEmail;
                }
                emailCll = new EmailCollector(inEmail);
            $.ajax({
                type: 'POST',
                url: `/API/Customers/GetByEmail`,
                async: true,
                dataType: 'Json',
                data: emailCll
            }).done(function (data) {
                console.dir(data.customerID);
                let $childElement = $(`<p>Customer ID: ${data.customerID}</p>`);
                $('#customerInfoGather').append($childElement);
                LoadSubcriptionTable(data.customerID);
                $('#custID').val(data.customerID);
            }).fail(function (data) {
                console.dir(data);
                $('#subscriptionBody");
                WriteLiteral(@"').append($(`<tr colspan=""3""><td><h4>No records found.</h4></td><td></td><td></td><td></td><td></td></tr>`));
            })
        }
        function LoadSubcriptionTable(custId) {
            $.ajax({
                type: 'GET',
                url: `/API/Subscriptions/${custId}`,
                async: true,
                dataType: 'Json'
            }).done(function (data) {
                $('#subscriptionBody').html('');
                console.dir(data);
                if (data != null) {
                    for (var i = 0; i < data.length; i++) {

                        let record = data[i];
                        console.dir(record.subNo);
                        console.dir(record.subId);
                        let $cellElement = null;
                        let $rowElement = $(`<tr></tr>`);

                        $cellElement = $(`<td>${i + 1}</td>`);
                        $rowElement.append($cellElement);
                        $cellElement = $(`<td>${record.su");
                WriteLiteral(@"bId}</td>`);
                        $rowElement.append($cellElement);
                        $cellElement = $(`<td></td>`);
                        $rowElement.append($cellElement);
                        $cellElement = $(`<td>${record.planId}</td>`);
                        $rowElement.append($cellElement);
                        $cellElement = $(`<button id=\""editLink\"" name=\""editLink${record.subId}\"" data-toggle=\""modal\"" data-target=\""#updateModal\"" value=\""${record.subId}\"" style=""background-color:white; padding: 0; margin: 0"" class=""button"">Update</button>`)
                        $rowElement.append($cellElement);
                        $('#subscriptionBody').append($rowElement);
                    }
                } else {
                    $('#subscriptionBody').append($(`<tr><td><h4>No records found.</h4></td><td></td><td></td><td></td><td></td></tr>`));
                }
                
            }).fail(function () {
                $('#subscriptionBody').append($(`<tr>");
                WriteLiteral("<td><h4>No records found.</h4></td><td></td><td></td><td></td><td></td></tr>`));\r\n            })\r\n        }\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IOptions<StripeSubscribe.Data.StripeSettings> Stripe { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
